{"version":3,"sources":["utils/data.js","pages/ImageDetail.js","pages/ImageForm.js","pages/ImageGallery.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["baseHttps","axios","create","baseURL","process","headers","ImageDetail","params","useParams","history","useHistory","useState","title","url","_id","image","setImage","isLoading","setIsLoading","isDeleting","setIsDeleting","classImage","setClassImage","isFullScreen","setIsFullScreen","handleDelete","a","delete","id","push","useEffect","get","res","data","className","src","alt","onClick","icon","faCompress","faExpand","disabled","ImageForm","file","setFile","setTitle","uploadImage","setUploadImage","loading","setLoading","pushNotify","status","Notify","text","effect","speed","customClass","customIcon","showIcon","showCloseButton","autoclose","autotimeout","gap","distance","type","position","customWrapper","handleSubmit","e","preventDefault","formData","FormData","validExtensions","fileType","includes","Compressor","quality","success","result","newFile","File","name","lastModified","Date","now","size","append","post","onUploadProgress","progressEvent","upload","Math","round","loaded","total","error","err","console","message","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","onSubmit","placeholder","onChange","target","value","event","fileSelected","files","accept","ImageGallery","images","setImages","length","map","index","Navbar","navbar","useRef","to","current","classList","toggle","ref","aria-current","App","log","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db7691d9.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport const baseHttps = axios.create({\n  baseURL: process.env.REACT_APP_ENDPOINT,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Headers\":\n      \"Origin, X-Requested-With, Content-Type, Accept\"\n  }\n})\n","import React, { useEffect, useState } from \"react\"\nimport { useParams, useHistory } from \"react-router\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faExpand, faCompress } from \"@fortawesome/free-solid-svg-icons\"\nimport { baseHttps } from \"../utils/data\"\n\nexport const ImageDetail = () => {\n  const params = useParams()\n  const history = useHistory()\n  const [image, setImage] = useState({\n    title: \"\",\n    url: \"\",\n    _id: \"\"\n  })\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [classImage, setClassImage] = useState(\"container_image\")\n  const [isFullScreen, setIsFullScreen] = useState(false)\n\n  const handleDelete = async () => {\n    setIsDeleting(true)\n    await baseHttps.delete(`/api/images/${params.id}`)\n    setIsDeleting(false)\n    history.push(\"/\")\n  }\n\n  const screenSize = () => {\n    setIsFullScreen(!isFullScreen)\n    setClassImage(\n      classImage === \"container_image\"\n        ? \"container_fullscreen\"\n        : \"container_image\"\n    )\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      const res = await baseHttps.get(`/api/images/${params.id}`)\n      setImage(res.data)\n      setIsLoading(true)\n    })()\n  }, [params.id])\n\n  return (\n    <div className='container_detail card bg-dark'>\n      <div className={classImage}>\n        {isLoading ? (\n          <img src={image.url} alt={image.title} className='imgDetail' />\n        ) : (\n          <p className='text-center'>Loading...</p>\n        )}\n        {isLoading && (\n          <FontAwesomeIcon\n            onClick={screenSize}\n            className={isFullScreen ? \"compress\" : \"fullscreen\"}\n            icon={isFullScreen ? faCompress : faExpand}\n          />\n        )}\n      </div>\n      <div className='card-body w-100'>\n        <h3 className=\"text-center\">{image.title}</h3>\n        <button\n          disabled={isDeleting}\n          className='btn btn-outline-danger'\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { baseHttps } from \"../utils/data\"\nimport Compressor from \"compressorjs\"\nimport Notify from \"simple-notify\"\nimport \"simple-notify/dist/simple-notify.min.css\"\n\nexport const ImageForm = () => {\n  const [file, setFile] = useState()\n  const [title, setTitle] = useState(\"\")\n  const [uploadImage, setUploadImage] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  const handleChange = (event) => {\n    const fileSelected = event.target.files[0]\n\n    setFile(fileSelected)\n  }\n\n  const pushNotify = (title = \"upload successfully \", status = \"success\") => {\n    new Notify({\n      status,\n      title,\n      text: \"\",\n      effect: \"slide\",\n      speed: 300,\n      customClass: \"color-text\",\n      customIcon: null,\n      showIcon: true,\n      showCloseButton: false,\n      autoclose: true,\n      autotimeout: 1000,\n      gap: 20,\n      distance: 20,\n      type: 2,\n      position: \"bottom x-center\",\n      customWrapper: \"\"\n    })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const formData = new FormData()\n    const validExtensions = [\"image/jpeg\", \"image/jpg\", \"image/png\"]\n\n    try {\n      setLoading(true)\n      if (!file) {\n        setLoading(false)\n        pushNotify(\"Please select an image\", \"error\")\n        return\n      }\n      const fileType = file.type\n\n      if (!validExtensions.includes(fileType)) {\n        setLoading(false)\n        pushNotify(\"Please select a valid image file\", \"error\")\n        return\n      }\n      new Compressor(file, {\n        quality: 0.5,\n        async success(result) {\n          const newFile = new File([result], result.name, {\n            type: result.type,\n            lastModified: Date.now(),\n            size: result.size\n          })\n\n          formData.append(\"image\", newFile)\n          formData.append(\"title\", title)\n          const response = await baseHttps.post(\n            `/api/images/upload`,\n            formData,\n            {\n              headers: { \"Content-Type\": \"multipart/form-data\" },\n              onUploadProgress(progressEvent) {\n                const upload = `${Math.round(\n                  (progressEvent.loaded / progressEvent.total) * 100\n                )}`\n\n                setUploadImage(upload)\n              }\n            }\n          )\n\n          if (response.status === 200) {\n            setLoading(false)\n            pushNotify()\n            history.push(\"/\")\n          }\n        },\n        error(err) {\n          console.error(err.message)\n          pushNotify(err.message, \"error\")\n        }\n      })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <div className='col-md-4 offset-md-4'>\n      <div className='card bg-dark text-light rounded-0 p-4'>\n        {loading && (\n          <div className='progress rounded-0'>\n            <div\n              className='progress-bar progress-bar-striped bg-success'\n              role='progressbar'\n              style={{ width: `${uploadImage}%` }}\n              aria-valuenow='25'\n              aria-valuemin='0'\n              aria-valuemax='100'\n            ></div>\n          </div>\n        )}\n\n        <div className='card-body'>\n          <h3 className='card-title'>Upload Image</h3>\n          <form onSubmit={handleSubmit}>\n            <input\n              type='text'\n              className='form-control bg-dark text-light my-3 rounded-0'\n              placeholder='Write a title for your photo'\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <input\n              type='file'\n              className='form-control bg-dark text-light rounded-0'\n              onChange={handleChange}\n              accept='image/*'\n            />\n            <div className='my-3'>\n              <button\n                disabled={loading}\n                className='btn btn-success rounded-0 w-100'\n              >\n                Upload\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { baseHttps } from \"../utils/data\"\nexport const ImageGallery = () => {\n  const [images, setImages] = useState([])\n\n  const history = useHistory()\n  useEffect(() => {\n    ;(async () => {\n      const res = await baseHttps.get(`/api/images`)\n      res ? setImages(res.data) : setImages([])\n    })()\n  }, [])\n\n  return images && images.length > 0 ? (\n    <div className='container-image'>\n      {images.map((image, index) => (\n        <div\n          className='container-image-item'\n          key={index}\n          onClick={() => history.push(`/images/${image._id}`)}\n        >\n          {/* <h6 className='card-title'>{image.title}</h6> */}\n          <img\n            title={image.title}\n            src={image.url}\n            alt={image.title}\n            className='w-100'\n          />\n        </div>\n      ))}\n    </div>\n  ) : (\n    <h2>Loading...</h2>\n  )\n}\n","import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport const Navbar = () => {\n  const navbar = useRef(null)\n\n  const showNavbar = () => {\n    navbar.current.classList.toggle(\"show\")\n  }\n  return (\n    <div>\n      <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\n        <div className='container'>\n          <Link className='navbar-brand' to='/react-gallery-deyvis'>\n            React Gallery\n          </Link>\n          <button onClick={showNavbar} className='navbar-toggler'>\n            <span className='navbar-toggler-icon'></span>\n          </button>\n          <div ref={navbar} className='collapse navbar-collapse' id='navbarNav'>\n            <ul className='navbar-nav ms-auto'>\n              <li className='nav-item'>\n                <Link\n                  className='nav-link active'\n                  aria-current='page'\n                  to='/upload'\n                >\n                  Upload an Image\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  )\n}\n","import { Route, Switch } from \"react-router-dom\"\n\nimport { ImageDetail } from \"./pages/ImageDetail\"\nimport { ImageForm } from \"./pages/ImageForm\"\nimport { ImageGallery } from \"./pages/ImageGallery\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./App.css\"\n\nimport { Navbar } from \"./components/Navbar\"\nfunction App() {\n  //version app\n  console.log(\n    \"%c🚀 ~ file: App.js ~ line 13 ~ App ~ version 0.0.5\",\n    \"font-size:12px\"\n  )\n  return (\n    <div className='bg-dark text-light'>\n      <Navbar />\n      <div className='container p-4'>\n        <Switch>\n          <Route exact path='/react-gallery-deyvis' component={ImageGallery} />\n          <Route path='/upload' component={ImageForm} />\n          <Route path='/images/:id' component={ImageDetail} />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}